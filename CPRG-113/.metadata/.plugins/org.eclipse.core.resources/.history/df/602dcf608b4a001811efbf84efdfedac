/**
 * 
 */
package ca.sait.xml;

import java.io.StringReader;
import java.io.StringWriter;
import java.util.Date;
import java.util.UUID;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import ca.sait.dto.Person;
import ca.sait.myStore.HasLogger;

/**
 * @author honglu
 *
 */
public class ProductXMSTest implements HasLogger {
    
    private static JAXBContext context;
    private static Marshaller marshaller;
    private static Unmarshaller unmarshaller;
    
    @BeforeAll
    public static void setup() throws Exception{
        context = JAXBContext.newInstance(Person.class);
        marshaller = context.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
        unmarshaller = context.createUnmarshaller();
    }
    
    @Test
    public void marshallTest() throws Exception {
        final UUID oid = UUID.randomUUID();
        final String firstName = "fred";
        final String lastName = "jones";
        final String email = "fjones@gmail.com";
        final Date birthdate = new Date();
        final Person person = new Person(oid, firstName, lastName, email, birthdate);
        
        final StringWriter sw = new StringWriter();
        marshaller.marshal(person, sw);
        
        logger().info("{}", sw.toString());
    }
    
    @Test
    public void unmarshallTest() throws Exception {
        final String xml = 
                "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n" + 
                "<person oid=\"fe843d7d-7be2-47c8-908a-64ca868db182\">\r\n" + 
                "    <firstName>fred</firstName>\r\n" + 
                "    <lastName>jones</lastName>\r\n" + 
                "    <email>fjones@gmail.com</email>\r\n" + 
                "    <birthdate>2018-04-19T17:57:40.872-06:00</birthdate>\r\n" + 
                "</person>";
        
        final StringReader sr = new StringReader(xml);
        final Person person = (Person)unmarshaller.unmarshal(sr);
        
        logger().info("Person: {}", person.getFirstName());
    }

}
