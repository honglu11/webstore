/**
 * 
 */
package ca.sait.mystore.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * @author Chris Elias
 *
 */
@Entity(name="Person")
@Table(name="person")
@NamedQueries({
    @NamedQuery(name=PersonEntity.QUERY_DTO_FIND_BY_OID, query="SELECT " + PersonEntity.CONSTRUCT_PARAM + " FROM Person p WHERE p.oid = :oid"),
    @NamedQuery(name=PersonEntity.QUERY_DTO_FIND_BY_EMAIL, query="SELECT " + PersonEntity.CONSTRUCT_PARAM + " FROM Person p WHERE p.email = :email"),
    @NamedQuery(name=PersonEntity.QUERY_DTO_FIND_ALL, query="SELECT " + PersonEntity.CONSTRUCT_PARAM + " FROM Person p"),
    
    @NamedQuery(name=PersonEntity.QUERY_FIND_BY_OID, query="SELECT p FROM Person p WHERE p.oid = :oid"),
    @NamedQuery(name=PersonEntity.QUERY_FIND_BY_EMAIL, query="SELECT p FROM Person p WHERE p.email = :email"),
    @NamedQuery(name=PersonEntity.QUERY_FIND_ALL, query="SELECT p FROM Person p"),
})
public class PersonEntity extends AbstractEntity {

    public static final String QUERY_DTO_FIND_BY_OID = "PersonDTO.findByOid";
    public static final String QUERY_DTO_FIND_BY_EMAIL = "PersonDTO.findByEmail";
    public static final String QUERY_DTO_FIND_ALL = "PersonDTO.findAll";

    public static final String QUERY_FIND_BY_OID = "PersonEntity.findByOid";
    public static final String QUERY_FIND_BY_EMAIL = "PersonEntity.findByEmail";
    public static final String QUERY_FIND_ALL = "PersonEntity.findAll";

    protected static final String CONSTRUCT_PARAM =
            "new ca.sait.dto.Person( " +
            "   p.oid," +
            "   p.firstName," +
            "   p.lastName," +
            "   p.email," +
            "   p.password" +
            ")";
    
    
    @Column(name="first_name", length=40)
    private String firstName;
    
    @Column(name="last_name", length=40)
    private String lastName;
    
    @Column(name="email", length=128, unique=true, nullable=false, updatable=false)
    private String email;
    
    @Column(name="password", length=16, nullable=true)
    private String password;
    
    @Temporal(TemporalType.DATE)
    @Column(name="birthdate")
    private Date birthdate;

    @ManyToMany()
    @JoinTable(name="person_roles", 
        joinColumns=@JoinColumn(name="person_oid", referencedColumnName="oid"),
        inverseJoinColumns=@JoinColumn(name="role_oid", referencedColumnName="oid")
    ) 
    private List<RoleEntity> roles;
    
    /**
     * @return the firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * @param firstName the firstName to set
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * @return the lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * @param lastName the lastName to set
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * @return the email
     */
    public String getEmail() {
        return email;
    }

    /**
     * @param email the email to set
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * @return the birthdate
     */
    public Date getBirthdate() {
        return birthdate;
    }

    /**
     * @param birthdate the birthdate to set
     */
    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }
    
    /**
     * 
     * @return
     */
    public List<RoleEntity> getRoles() {
        if (roles == null)
            roles = new ArrayList<>();
        
        return roles;
    }

    /**
     * @return the password
     */
    public String getPassword() {
        return password;
    }

    /**
     * @param password the password to set
     */
    public void setPassword(String password) {
        this.password = password;
    }
}
