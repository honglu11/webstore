/**
 * 
 */
package ca.sait.mystore.web.mvc.model;

import static ca.sait.util.StringUtils.isEmptyOrNull;

import java.util.UUID;

import javax.enterprise.inject.Model;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ca.sait.dto.CartItem;
import ca.sait.dto.Product;
import ca.sait.mystore.web.mvc.session.CartSession;
import ca.sait.services.NoEntityFoundException;
import ca.sait.services.ProductService;

/**
 *
 */
@Model
public class ShoppingCartModel extends AbstractModel {
    

    @Inject
    private CartSession cartSession;
    

    /* (non-Javadoc)
     * @see ca.sait.mystore.web.mvc.model.AbstractView#process(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
     */
    @Override
    protected String process(HttpServletRequest request, HttpServletResponse response) {
        logger().trace("ENTER process(request,resposne)");
        
        try {
            final String action = request.getParameter("action");
            logger().info("action {}", action);
            if ("checkout".equalsIgnoreCase(action)) {
                cartSession.checkout();
                return "/WEB-INF/jsp/thankyou.jsp";
            } else {
            
            final String productOid = request.getParameter("oid");
            final String quantity = request.getParameter("quantity");
            
            logger().info("product oid {}", productOid);
            logger().info("quantity {}", quantity);

            if (!isEmptyOrNull(productOid) && !isEmptyOrNull(quantity)) {
                try {
                    final int qty = Integer.parseInt(quantity); 
                    
                    if ( qty <= cartSession.getIndividualProduct(productOid).getInventoryQuantity()) {
                      cartSession.addItem(productOid, qty);
                    } else {
                      setErrorMessage("The quntity you order {} is overseed the stock quntity {}: ", qty, cartSession.getIndividualProduct(productOid).getInventoryQuantity());  
                    }
                    
                    logger().info("cartSession finish addItem");
                } catch (final NumberFormatException ex) {
                    setErrorMessage("Invalid Number for Quantity: " + quantity);
                } catch (final NoEntityFoundException ex) {
                    setErrorMessage("Invalid Product Id");
                }
            }

            return "/WEB-INF/jsp/shoppingcart.jsp";
            }
        } finally {
            logger().trace("EXIT process(request,resposne)");
        }
     
    }

    @Override
    public String getNavigationName() {
        return "SHOPPINGCART";
    }
}
